 
#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
#
# The network connection profile provides client applications the information about the target
# blockchain network that are necessary for the applications to interact with it. These are all
# knowledge that must be acquired from out-of-band sources. This file provides such a source.
#

name: "test-network"

description: ""

#
# Schema version of the content. Used by the SDK to apply the corresponding parsing rules.
#
version: 1.0.0

#
# The client section used by GO SDK.
#
client:
  
  tlsEnable: true

  organization: Org1

  logging:
    level: info

  connection:
   timeout:
     peer:
       endorser: '6000'
     orderer: '6000'

  # Root of the MSP directories with keys and certs.
  cryptoconfig:
    path: ABSPATH/network/crypto-config

  # BCCSP config for the client. Used by GO SDK.
  BCCSP:
    security:
     enabled: true
     default:
      provider: "SW"
     hashAlgorithm: "SHA2"
     softVerify: true
     level: 256

channels:
  # name of the channel
  mychannel:
    orderers:
      - ord1-hlf-ord.orderers.svc.cluster.local

    # Required. list of peers from participating orgs
    peers:
      peer1-hlf-peer.org1.svc.cluster.local:
      peer2-hlf-peer.org2.svc.cluster.local:
      peer3-hlf-peer.org3.svc.cluster.local:

#
# list of participating organizations in this network
#
organizations:
  Org1:
    mspid: Org1MSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    cryptoPath:  peerOrganizations/org1.svc.cluster.local/users/Admin@org1.svc.cluster.local/msp

    peers:
      - peer1-hlf-peer.org1.svc.cluster.local

  Org2:
    mspid: Org2MSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    cryptoPath:  peerOrganizations/org2.svc.cluster.local/users/Admin@org2.svc.cluster.local/msp

    peers:
      - peer2-hlf-peer.org2.svc.cluster.local

  Org3:
    mspid: Org3MSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    cryptoPath:  peerOrganizations/org3.svc.cluster.local/users/Admin@org3.svc.cluster.local/msp

    peers:
      - peer3-hlf-peer.org3.svc.cluster.local

  # Orderer Org name
  OrdererOrg:
      # Membership Service Provider ID for this organization
      mspID: OrdererMSP

      # Needed to load users crypto keys and certs for this org (absolute path or relative to global crypto path, DEV mode)
      cryptoPath: ordererOrganizations/orderers.svc.cluster.local/users/Admin@orderers.svc.cluster.local/msp

orderers:
  ord1-hlf-ord.orderers.svc.cluster.local:
    #url: grpcs://minikube:30993
    # grpcOptions:
    #   ssl-target-name-override: ord1-hlf-ord.orderers.svc.cluster.local
    tlsCACerts:
      path: ABSPATH/network/crypto-config/ordererOrganizations/orderers.svc.cluster.local/tlsca/tlsca.orderers.svc.cluster.local-cert.pem

peers:
  peer1-hlf-peer.org1.svc.cluster.local:
    url: grpcs://peer1-hlf-peer.org1.svc.cluster.local:30151
    grpcOptions:
      ssl-target-name-override: peer1-hlf-peer.org1.svc.cluster.local
    tlsCACerts:
      path: "ABSPATH/network/crypto-config/peerOrganizations/org1.svc.cluster.local/peers/peer1-hlf-peer.org1.svc.cluster.local/msp/tlscacerts/tlsca.org1.svc.cluster.local-cert.pem"

  peer2-hlf-peer.org2.svc.cluster.local:
    url: grpcs://peer2-hlf-peer.org2.svc.cluster.local:30251
    grpcOptions:
      ssl-target-name-override: peer2-hlf-peer.org2.svc.cluster.local
    tlsCACerts:
      path: ABSPATH/network/crypto-config/peerOrganizations/org2.svc.cluster.local/tlsca/tlsca.org2.svc.cluster.local-cert.pem

  peer3-hlf-peer.org3.svc.cluster.local:
    url: grpcs://peer3-hlf-peer.org3.svc.cluster.local:30351
    grpcOptions:
      ssl-target-name-override: peer3-hlf-peer.org3.svc.cluster.local
    tlsCACerts:
      path: ABSPATH/network/crypto-config/peerOrganizations/org3.svc.cluster.local/tlsca/tlsca.org3.svc.cluster.local-cert.pem

###############################################################################
#
#    Operations section
#    copied from Fabric's core.yaml
###############################################################################
operations:
  # host and port for the operations server
  listenAddress: 127.0.0.1:8080

  # TLS configuration for the operations endpoint
  tls:
    # TLS enabled
    enabled: false

    # path to PEM encoded server certificate for the operations server
    cert:
      file:

    # path to PEM encoded server key for the operations server
    key:
      file:

    # require client certificate authentication to access all resources
    clientAuthRequired: false

    # paths to PEM encoded ca certificates to trust for client authentication
    clientRootCAs:
      files: []
